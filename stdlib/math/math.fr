// Copyright 2021, MIT License.
//
// Authors
// ----------------
// Mertcan Davulcu
//
//
// Description
// ----------------
// Math utilities.
//

package math

// Returns absolute of value.
fn Abs(x) {
  if x < 0 {
    ret -x
  }
  ret x
}

// Returns the smallest (closest to negative infinity).
fn Ceil(x) {
  if x - int(x) == 0 {
    ret x
  } else if x - int(x) > 0 {
    ret int(x + 1)
  }
  ret int(x)
}

// Returns radians to degrees.
fn Degrees(radians) { ret radians * 57.295780 }

// Returns factorial of number.
fn Fact(x) {
  if x < 0 {
    ret NaN
  } else if x == 0 {
    ret 1
  }
  ret x * Fact(x - 1)
}

// Returns the floor of x as an integral.
fn Floor(n) {
  intN := int(n)
  if n - intN >= 0 {
    ret intN
  }
  ret intN - 1
}

// Returns true if number is NaN, false if not.
fn IsNaN(x) { ret x <> x }

// Returns true if object is numeric, returns false if not.
fn IsNumeric(object) {
  result := float(object)
  ret result <> 0 || result == 0 && (object == 0 || object == '0')
}

// Returns maximum number.
fn Max(x, y) {
  if x > y {
    ret x
  }
  ret y
}
